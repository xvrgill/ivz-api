from marshmallow import Schema, fields


# TODO: Consider using nested schemas for the fields (everything except for _id and created at)
class AirTablePostSchema(Schema):
    _id = fields.String()
    air_table_id = fields.Str(data_key="id")
    name = fields.Str(data_key="Name")
    images = fields.Dict(data_key="All images")
    status = fields.List(fields.Str, required=False, data_key="Status")
    us_web_lauch_date = fields.Str(data_key="US Web launch date")
    social_date_1 = fields.Str(data_key="Socal Date #1")
    social_date_2 = fields.Str(data_key="Socal Date #2")
    social_date_3 = fields.Str(data_key="Socal Date #3")
    social_date_4 = fields.Str(data_key="Socal Date #4")
    social_date_5 = fields.Str(data_key="Socal Date #5")
    social_date_6 = fields.Str(data_key="Socal Date #6")
    social_date_7 = fields.Str(data_key="Socal Date #7")
    social_date_8 = fields.Str(data_key="Socal Date #8")
    social_channel = fields.List(fields.Str, data_key="Social Channel")
    content_author = fields.List(fields.Str, data_key="Content Author")
    social_campaign = fields.List(fields.Str, data_key="Social Campaign")
    live_urls = fields.Str(data_key="Live URLs")
    satus_update = fields.Str(data_key="Status Update")
    tweet_copy = fields.Str(data_key="Tweet copy")
    paid_copy = fields.Str(data_key="Paid $$ copy")
    linkedin_facebook_copy = fields.Str(data_key="LinkedIn/Facebook copy")
    article_copy = fields.List(fields.Str, data_key="Article copy")
    us_web_compliance_log_number = fields.Str(data_key="US Web: Compliance log #")
    programs_and_themes = fields.Str(data_key="Programs & Themes")
    web_role = fields.List(fields.Str, data_key="Web: Role")
    web_date_of_last_use = fields.String(data_key="Web: Date of last use")
    email_trigger = fields.Bool(data_key="Need email trigger?")
    linkedin_thought_leader = fields.List(fields.Str, data_key="Linkedin Thought Leader")
    editorial_rep = fields.List(fields.Str, data_key="Editorial rep")
    social_team = fields.List(fields.Str, data_key="Social Team")
    web_topic_tag = fields.List(fields.Str, data_key="Web: Topic Tag")
    ca_web_launch = fields.Str(data_key="CA Web launch")
    planning = fields.List(fields.Str, data_key="Planning")
    where_to_post = fields.List(fields.Str, data_key="Where to post")
    editorial_process_steps = fields.List(fields.Str, data_key="Editorial process steps")
    ca_web_compliance_log = fields.Str(data_key="CA Web: Compliance log")
    see_associated_record = fields.List(fields.Str, data_key="See associated record")
    social_brand = fields.List(fields.Str, data_key="Social: Brand")
    soocial_review_queue = fields.String(data_key="Social review queue")
    ca_web_fr_translation_publish_date = fields.Str(data_key="CA Web: Fr translation publish date")
    link_to_qqq_images = fields.List(fields.Str, data_key="Link to QQQ Images")
    social_canada_copy = fields.Str(data_key="Social: Canada copy")
    qqq_content_partner = fields.Str(data_key="QQQ Content Partner")
    instagram_copy = fields.Str(data_key="Instagram Copy")
    social_initiative = fields.Str(data_key="Social: Initiative")
